Command: ninja all
[1/12] Linking C static library esp-idf/spiffs/libspiffs.a
[2/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[3/12] Performing build step for 'bootloader'
[1/1] cd /project/build/bootloader/esp-idf/esptool_py && /opt/esp-idf-tools/python_env/idf5.5_py3.10_env/bin/python /opt/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /project/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating esp-idf/esp_system/ld/sections.ld
[7/10] Building C object CMakeFiles/EncoderESP.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable EncoderESP.elf
[9/10] Generating binary image from built executable
esptool.py v4.10.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /project/build/EncoderESP.bin
[10/10] cd /project/build/esp-idf/esptool_py && /opt/esp-idf-tools/python_env/idf5.5_py3.10_env/bin/python /opt/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /project/build/partition_table/partition-table.bin /project/build/EncoderESP.bin
EncoderESP.bin binary size 0x344d0 bytes. Smallest app partition is 0x100000 bytes. 0xcbb30 bytes (80%) free.
